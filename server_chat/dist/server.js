// PanAI Express Server - Built on 2025-10-19T10:11:05.892Z

import w from"express";import M from"axios";import B from"dotenv";import H from"cors";import h from"fs";import p from"path";import v from"crypto";import{fileURLToPath as N}from"url";var z=N(import.meta.url),U=p.dirname(z);B.config();var f=w();f.use(w.json());f.use(H());var J="https://openrouter.ai/api/v1/chat/completions",m=p.join(U,"..","chats"),y=p.join(U,"..","chats","responses.json");h.existsSync(m)||h.mkdirSync(m);function I(o){if(o===null||typeof o!="object")return o;if(Array.isArray(o))return o.map(I);let t={};for(let e of Object.keys(o).sort())t[e]=I(o[e]);return t}function G(o){let t=I(o);return JSON.stringify(t)}var L=Buffer.from("MSGv1|");function X(o){let t=v.createHash("sha256");return t.update(L),t.update(Buffer.from(o,"utf8")),t.digest("hex")}function Y(o){let t=v.createHash("sha256").update("tfhe-demo").digest(),e=Buffer.from(o,"hex"),n=Buffer.alloc(e.length);for(let s=0;s<e.length;s++)n[s]=e[s]^t[s%t.length];return"FHE_CTXT_"+n.toString("hex").slice(0,64)}function K(o,t){let e=v.createHash("sha256"),n=Buffer.from(o,"hex"),s=Buffer.from(t??o,"hex");return e.update(Buffer.concat([n,s])),e.digest("hex")}function F(o){if(o.length===0)return{root:null,levels:[]};let t=[...o],e=[t];for(;t.length>1;){let n=[];for(let s=0;s<t.length;s+=2){let a=t[s],r=s+1<t.length?t[s+1]:null;n.push(K(a,r??a))}t=n,e.push(t)}return{root:e[e.length-1][0],levels:e}}function R(o,t){let e=[],n=t;for(let s=0;s<o.length-1;s++){let a=o[s],r=n%2===1,c=r?n-1:n+1,i=a[c]??a[n];e.push({pos:r?"left":"right",h:i}),n=Math.floor(n/2)}return e}function q(o){let t=new Date(o*1e3),e=t.getUTCFullYear(),n=String(t.getUTCMonth()+1).padStart(2,"0"),s=String(t.getUTCDate()).padStart(2,"0");return`${e}-${n}-${s}`}function S(o){let t=p.join(m,`chats_${o}.json`);if(h.existsSync(t))try{let e=JSON.parse(h.readFileSync(t,"utf8"));if(e.chats&&!e.conversations){let n=[];if(e.chats.length>0){let s={id:"1",title:"",messages:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},a=1;for(let r=0;r<e.chats.length;r++){let c=e.chats[r],i=s.messages[s.messages.length-1];if(c.role==="user"&&i&&i.role==="user"){if(s.messages.length>0){let l=s.messages.find(u=>u.role==="user");s.title=l?l.content.slice(0,40)+(l.content.length>40?"...":""):"Chat "+a,n.push(s)}a++,s={id:String(a),title:"",messages:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}}s.messages.push(c)}if(s.messages.length>0){let r=s.messages.find(c=>c.role==="user");s.title=r?r.content.slice(0,40)+(r.content.length>40?"...":""):"Chat "+a,n.push(s)}}e.conversations=n,delete e.chats,E(o,e)}return{conversations:e.conversations??[],logs:e.logs??[],messages:e.messages??[],trees:e.trees??{}}}catch(e){return console.warn(`\u26A0\uFE0F Errore caricando file chat per ${o}:`,e.message),{conversations:[],logs:[],messages:[],trees:{}}}else return{conversations:[],logs:[],messages:[],trees:{}}}function E(o,t){let e=p.join(m,`chats_${o}.json`);h.writeFileSync(e,JSON.stringify(t,null,2),"utf8")}var _=[];if(h.existsSync(y))try{_=JSON.parse(h.readFileSync(y,"utf8"))}catch{_=[]}function Q(o){_.push(o),h.writeFileSync(y,JSON.stringify(_,null,2),"utf8")}function D({user_id:o,created:t,provider:e,model:n,content:s,system_fingerprint:a,content_type:r}){let c=v.randomBytes(5).toString("hex"),i={user_id:o,created:t,provider:e,model:n,content:s,system_fingerprint:a,nonce:c};r&&(i.content_type=r);let g=G(i),l=X(g),u=Y(l);return{user_id:o,created:t,provider:e,model:n,content:s,system_fingerprint:a,nonce:c,...r?{content_type:r}:{},content_hash:l,content_hash_fhe:u,canonical_json:g}}function C(o,t){let e=q(t.created);o.trees[e]||(o.trees[e]={algo:"SHA-256",canon_rules:"JCS-like",leaves:[],root:null});let n=o.trees[e],s=n.leaves.length;n.leaves.push(t.content_hash);let{root:a,levels:r}=F(n.leaves);n.root=a;let c=R(r,s);return{stored:{content_hash:t.content_hash,content_hash_fhe:t.content_hash_fhe,canonical_json:t.canonical_json,tree_id:e,leaf_index:s,proof:c},tree_id:e}}async function P(o,t,e,n,s=null){let a=S(o);console.log("\u{1F535} sendToAI - Ricevuto conversation_id:",s),console.log("\u{1F535} sendToAI - Conversazioni esistenti:",a.conversations.map(d=>({id:d.id,messages:d.messages.length})));let r;if(s)r=a.conversations.find(d=>d.id===s),r?console.log("\u2705 Trovata conversazione esistente:",s,"- Messaggi attuali:",r.messages.length):(console.log("\u26A0\uFE0F  Conversation ID non trovato, creo nuova conversazione con ID:",s),r={id:s,title:n.slice(0,40)+(n.length>40?"...":""),messages:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},a.conversations.push(r));else{let d=Date.now().toString();console.log("\u{1F195} Nessun conversation_id fornito, creo nuova con ID:",d),r={id:d,title:n.slice(0,40)+(n.length>40?"...":""),messages:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},a.conversations.push(r)}console.log("\u{1F4DD} Aggiunto messaggio utente alla conversazione:",r.id),r.messages.push({role:"user",content:n}),r.updatedAt=new Date().toISOString();let i=(await M.post(J,{model:e,messages:r.messages},{headers:{Authorization:`Bearer ${process.env.OPENROUTER_API_KEY}`,"HTTP-Referer":"http://localhost:3000","X-Title":t,"Content-Type":"application/json"}})).data,g=i.choices?.[0]?.message?.content||"",l=typeof i.created=="number"?i.created:Math.floor(Date.now()/1e3),u=i.system_fingerprint||"none";r.messages.push({role:"assistant",content:g}),r.updatedAt=new Date().toISOString();let O={user_id:o,created:l,provider:t,model:e,message:n,response:g,system_fingerprint:u},j=D({user_id:o,created:l,provider:t,model:e,content:n,system_fingerprint:u,content_type:"user"}),{stored:x,tree_id:$}=C(a,j);a.messages.push({...j,tree_id:$,leaf_index:x.leaf_index,proof:x.proof});let A=D({user_id:o,created:l,provider:t,model:e,content:g,system_fingerprint:u,content_type:"assistant"}),{stored:T,tree_id:k}=C(a,A);return a.messages.push({...A,tree_id:k,leaf_index:T.leaf_index,proof:T.proof}),a.logs.push(O),E(o,a),Q(O),console.log("\u{1F4BE} Salvata conversazione:",r.id,"- Totale messaggi:",r.messages.length),console.log("\u{1F4CA} Totale conversazioni utente:",a.conversations.length),{aiMessage:g,full_response:i,created:l,system_fingerprint:u,conversation_id:r.id}}f.post("/api/chat",async(o,t)=>{try{let{user_id:e="anonymous",provider:n="OpenAI",model:s="gpt-4o-mini",message:a,conversation_id:r=null}=o.body;if(console.log("\u{1F535} /api/chat - Ricevuto dal frontend:",{user_id:e,conversation_id:r,conversation_id_type:typeof r,message:a?.substring(0,30)}),!a||typeof a!="string")return t.status(400).json({error:"Campo 'message' mancante o non valido"});let c=await P(e,n,s,a,r);t.json({success:!0,provider:n,model:s,content:c.aiMessage,created:c.created,system_fingerprint:c.system_fingerprint,conversation_id:c.conversation_id})}catch(e){console.error("\u274C Errore generico chat:",e.response?.data||e.message),t.status(500).json({error:e.message,details:e.response?.data})}});f.get("/api/chats/:user_id",(o,t)=>{let{user_id:e}=o.params,n=S(e),s=null,a=Object.keys(n.trees).sort();if(a.length>0){let r=a[a.length-1],c=n.trees[r];s={tree_id:r,root_hash:c.root,algo:c.algo,canon_rules:c.canon_rules,total_leaves:c.leaves.length}}t.json({user_id:e,conversations:n.conversations,logs:n.logs,messages:n.messages,trees:Object.fromEntries(Object.entries(n.trees).map(([r,c])=>[r,{root:c.root,root_hash:c.root,algo:c.algo,canon_rules:c.canon_rules,leaves:c.leaves,leaves_count:c.leaves.length}])),latest_tree:s})});f.get("/api/proof/:user_id/:hash",(o,t)=>{let{user_id:e,hash:n}=o.params,s=S(e);for(let[a,r]of Object.entries(s.trees)){let c=r.leaves.indexOf(n);if(c!==-1){let{root:i,levels:g}=F(r.leaves),l=R(g,c);return t.json({user_id:e,tree_id:a,leaf_hash:n,leaf_index:c,root_hash:i,algo:r.algo,canon_rules:r.canon_rules,domain_prefix:"MSGv1|",proof:l})}}t.status(404).json({error:"hash non trovato in nessun albero"})});var V={openai:"openai/gpt-4o-mini",anthropic:"anthropic/claude-haiku-4.5",xai:"x-ai/grok-4-fast",google:"google/gemini-2.5-flash-preview-09-2025",meta:"meta-llama/llama-3.1-70b-instruct"};Object.entries(V).forEach(([o,t])=>{f.post(`/api/${o}`,async(e,n)=>{try{let{user_id:s="anonymous",message:a,conversation_id:r=null}=e.body;if(console.log(`\u{1F535} /api/${o} - Ricevuto:`,{user_id:s,conversation_id:r,message:a?.substring(0,30)}),!a||typeof a!="string")return n.status(400).json({error:"Campo 'message' mancante o non valido"});let c=await P(s,o,t,a,r);n.json({success:!0,provider:o,model:t,content:c.aiMessage,created:c.created,system_fingerprint:c.system_fingerprint,conversation_id:c.conversation_id})}catch(s){console.error(`\u274C Errore ${o}:`,s.response?.data||s.message),n.status(500).json({error:s.message,details:s.response?.data})}})});f.get("/api/user-chats/:userId",(o,t)=>{try{let{userId:e}=o.params;if(!e)return t.status(400).json({error:"userId is required"});let n=S(e);t.json({conversations:n.conversations||[],success:!0})}catch(e){console.error(`\u274C Error loading chats for user ${o.params.userId}:`,e),t.status(500).json({error:"Failed to load chat history",details:e.message})}});var b=process.env.PORT||3e3;f.listen(b,()=>console.log(`\u2705 Server AI multi-utente avviato su http://localhost:${b}`));
//# sourceMappingURL=server.js.map
